generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categorias {
  id        Int    @id @default(autoincrement())
  categoria String @db.VarChar(50)
  menu      menu[]
}

model menu {
  id                                    Int                                     @id @default(autoincrement())
  nombre                                String                                  @db.VarChar(50)
  descripcion                           String                                  @db.VarChar(200)
  precio                                Decimal?                                @db.Decimal(10, 2)
  img                                   String                                  @default("coffee.jpg") @db.VarChar(50)
  id_categoria                          Int
  categorias                            categorias                              @relation(fields: [id_categoria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categoria")
  ordenes_platos                        ordenes_platos[]
  ordenes_platos_extras                 ordenes_platos_extras[]
  ordenes_platos_valores_personalizados ordenes_platos_valores_personalizados[]
  platos_con_extras                     platos_con_extras[]
  platos_con_ingredientes_opcionales    platos_con_ingredientes_opcionales[]
  variantes                             variantes[]

  @@index([id_categoria], map: "categoria")
}

model tipos_de_variantes {
  id                       Int                        @id @default(autoincrement())
  variante                 String                     @db.VarChar(50)
  ordenes_platos_variantes ordenes_platos_variantes[]
  variantes                variantes[]
}

model variantes {
  id                    Int                @id @default(autoincrement())
  id_menu               Int
  id_tipos_de_variantes Int
  precio                Decimal            @default(0.00) @db.Decimal(10, 2)
  menu                  menu               @relation(fields: [id_menu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "menu")
  tipos_de_variantes    tipos_de_variantes @relation(fields: [id_tipos_de_variantes], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tipos_de_variantes")

  @@index([id_menu], map: "menu")
  @@index([id_tipos_de_variantes], map: "tipos_de_variantes")
}

model extras {
  id                    Int                     @id @default(autoincrement())
  extra                 String                  @db.VarChar(50)
  ordenes_platos_extras ordenes_platos_extras[]
  platos_con_extras     platos_con_extras[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ingredientes_opcionales {
  id                                    Int                                     @id @default(autoincrement())
  ingrediente                           String?                                 @db.VarChar(50)
  ordenes_platos_ingredientesopcionales ordenes_platos_ingredientesopcionales[]
  platos_con_ingredientes_opcionales    platos_con_ingredientes_opcionales[]
}

model platos_con_extras {
  id       Int     @id @default(autoincrement())
  id_menu  Int
  id_extra Int
  price    Decimal @db.Decimal(10, 2)
  extras   extras  @relation(fields: [id_extra], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_platos_con_extras_extras")
  menu     menu    @relation(fields: [id_menu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_platos_con_extras_menu")

  @@index([id_extra], map: "FK_platos_con_extras_extras")
  @@index([id_menu], map: "FK_platos_con_extras_menu")
}

model platos_con_ingredientes_opcionales {
  id                         Int                     @id @default(autoincrement())
  id_menu                    Int
  id_ingredientes_opcionales Int
  ingredientes_opcionales    ingredientes_opcionales @relation(fields: [id_ingredientes_opcionales], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_platos_con_ingredientes_opcionales_ingredientes_opcionales")
  menu                       menu                    @relation(fields: [id_menu], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_platos_con_ingredientes_opcionales_menu")

  @@index([id_ingredientes_opcionales], map: "FK_platos_con_ingredientes_opcionales_ingredientes_opcionales")
  @@index([id_menu], map: "FK_platos_con_ingredientes_opcionales_menu")
}

model clientes {
  id       Int       @id @default(autoincrement())
  nombre   String    @db.VarChar(50)
  email    String    @db.VarChar(50)
  password String    @db.VarChar(150)
  id_rol   Int       @default(1)
  roles    roles     @relation(fields: [id_rol], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_clientes_roles")
  ordenes  ordenes[]

  @@index([id_rol], map: "FK_clientes_roles")
}

model roles {
  id       Int        @id @default(autoincrement())
  roles    String     @db.VarChar(50)
  clientes clientes[]
}

model ordenes {
  id                   Int              @id @default(autoincrement())
  id_cliente           Int
  fecha_creacion       DateTime         @db.DateTime(0)
  clientes             clientes         @relation(fields: [id_cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_clientes")
  other_ordenes_platos ordenes_platos[] @relation("ordenes_platosToordenes_platos")

  @@index([id_cliente], map: "FK_ordenes_clientes")
}

model opciones_personalizados {
  id                                    Int                                     @id @default(autoincrement())
  opcion                                String                                  @default("") @db.VarChar(50)
  opciones_personalizados_valores       opciones_personalizados_valores[]
  ordenes_platos_valores_personalizados ordenes_platos_valores_personalizados[]
}

model opciones_personalizados_valores {
  id                                    Int                                     @id @default(autoincrement())
  id_opcion_personalizada               Int
  valor                                 String                                  @default("") @db.VarChar(50)
  opciones_personalizados               opciones_personalizados                 @relation(fields: [id_opcion_personalizada], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_opciones_personalizados_valores_opciones_personalizados")
  ordenes_platos_valores_personalizados ordenes_platos_valores_personalizados[]

  @@index([id_opcion_personalizada], map: "FK_opciones_personalizados_valores_opciones_personalizados")
}

model ordenes_platos {
  id                                    Int                                     @id @default(autoincrement())
  id_plato                              Int                                     @default(0)
  cantidad                              Int
  precio_total                          Decimal                                 @default(0.00) @db.Decimal(10, 2)
  id_orden                              Int
  menu                                  menu                                    @relation(fields: [id_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_menu")
  ordenes_platos                        ordenes                                 @relation("ordenes_platosToordenes_platos", fields: [id_orden], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_ordenes_platos")
  ordenes_platos_extras                 ordenes_platos_extras[]
  ordenes_platos_ingredientesopcionales ordenes_platos_ingredientesopcionales[]
  ordenes_platos_valores_personalizados ordenes_platos_valores_personalizados[]
  ordenes_platos_variantes              ordenes_platos_variantes[]

  @@index([id_plato], map: "FK_ordenes_platos_menu")
  @@index([id_orden], map: "FK_ordenes_platos_ordenes")
}

model ordenes_platos_extras {
  id             Int            @id @default(autoincrement())
  id_plato       Int
  id_extra       Int
  precio         Decimal        @default(0.00) @db.Decimal(10, 2)
  id_orden_plato Int
  extras         extras         @relation(fields: [id_extra], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_extras_extras")
  menu           menu           @relation(fields: [id_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_extras_menu")
  ordenes        ordenes_platos @relation(fields: [id_orden_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_extras_ordenes")

  @@index([id_extra], map: "FK_ordenes_platos_extras_extras")
  @@index([id_plato], map: "FK_ordenes_platos_extras_menu")
  @@index([id_orden_plato], map: "FK_ordenes_platos_extras_ordenes")
}

model ordenes_platos_ingredientesopcionales {
  id                      Int                     @id @default(autoincrement())
  id_ingredienteOpcional  Int
  id_orden_plato          Int
  ingredientes_opcionales ingredientes_opcionales @relation(fields: [id_ingredienteOpcional], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ingredientes_opcionales")
  ordenes                 ordenes_platos          @relation(fields: [id_orden_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_ingredientesopcionales_ordenes")

  @@index([id_ingredienteOpcional], map: "FK__ingredientes_opcionales")
  @@index([id_orden_plato], map: "FK_ordenes_platos_ingredientesopcionales_ordenes")
}

model ordenes_platos_valores_personalizados {
  id                              Int                             @id @default(autoincrement())
  id_plato                        Int                             @default(0)
  id_opcion_personalizado         Int
  id_valor_personalizado          Int
  id_orden_plato                  Int
  opciones_personalizados_valores opciones_personalizados_valores @relation(fields: [id_valor_personalizado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_opciones_personalizados_valores")
  menu                            menu                            @relation(fields: [id_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_valores_personalizados_menu")
  opciones_personalizados         opciones_personalizados         @relation(fields: [id_opcion_personalizado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_valores_personalizados_opciones_personalizados")
  ordenes                         ordenes_platos                  @relation(fields: [id_orden_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_valores_personalizados_ordenes")

  @@index([id_valor_personalizado], map: "FK_opciones_personalizados_valores")
  @@index([id_plato], map: "FK_ordenes_platos_valores_personalizados_menu")
  @@index([id_opcion_personalizado], map: "FK_ordenes_platos_valores_personalizados_opciones_personalizados")
  @@index([id_orden_plato], map: "FK_ordenes_platos_valores_personalizados_ordenes")
}

model ordenes_platos_variantes {
  id                 Int                @id @default(autoincrement())
  id_variante        Int
  id_orden_plato     Int
  ordenes            ordenes_platos     @relation(fields: [id_orden_plato], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_variantes_ordenes")
  tipos_de_variantes tipos_de_variantes @relation(fields: [id_variante], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ordenes_platos_variantes_tipos_de_variantes")

  @@index([id_orden_plato], map: "FK_ordenes_platos_variantes_ordenes")
  @@index([id_variante], map: "FK_ordenes_platos_variantes_tipos_de_variantes")
}
